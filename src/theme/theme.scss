@use '@angular/material' as mat;
@import '@angular/material/theming';

// Include the common styles for Angular Material
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();

// Define the light theme
$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$light-warn: mat.define-palette(mat.$red-palette);

$light-theme: mat.define-light-theme((
  color: (
    primary: $light-primary,
    accent: $light-accent,
    warn: $light-warn,
  ),
  typography: mat.define-legacy-typography-config(),
  density: 0,
));

// Define the dark theme
$dark-primary: mat.define-palette(mat.$blue-palette);
$dark-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400);
$dark-warn: mat.define-palette(mat.$deep-orange-palette);

$dark-theme: mat.define-dark-theme((
  color: (
    primary: $dark-primary,
    accent: $dark-accent,
    warn: $dark-warn,
  ),
  typography: mat.define-legacy-typography-config(),
  density: 0,
));

// Apply the light theme by default
@include mat.all-legacy-component-themes($light-theme);

// Apply the dark theme only when the `.dark-theme` CSS class is applied
// to an ancestor element of the components (such as `body`)
.dark-theme {
  @include mat.all-legacy-component-colors($dark-theme);

  // Custom dark theme styles
  --background-color: #121212;
  --text-color: #ffffff;
  --card-background: #1e1e1e;
  --border-color: #333333;
  --hover-color: rgba(255, 255, 255, 0.1);
  
  background-color: var(--background-color);
  color: var(--text-color);
  
  .mat-card {
    background-color: var(--card-background);
  }
  
  a:not(.mat-button):not(.mat-raised-button):not(.mat-fab):not(.mat-mini-fab):not([mat-list-item]) {
    color: mat.get-color-from-palette($dark-primary, 300);
    
    &:hover {
      color: mat.get-color-from-palette($dark-primary, 100);
    }
  }
}

// Light theme custom variables
:root {
  --background-color: #f5f5f5;
  --text-color: rgba(0, 0, 0, 0.87);
  --card-background: #ffffff;
  --border-color: #e0e0e0;
  --hover-color: rgba(0, 0, 0, 0.04);
}

// Global styles
body {
  background-color: var(--background-color);
  color: var(--text-color);
  transition: background-color 0.3s ease, color 0.3s ease;
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

// Add smooth transitions for theme switching
.mat-card,
.mat-toolbar,
.mat-button,
.mat-icon-button,
.mat-raised-button,
.mat-form-field,
.mat-input-element,
.mat-select,
.mat-option {
  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;
}